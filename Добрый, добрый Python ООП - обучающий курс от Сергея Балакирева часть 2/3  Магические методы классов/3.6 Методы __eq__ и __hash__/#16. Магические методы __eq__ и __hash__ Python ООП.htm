<!DOCTYPE html>
<html><head>
	<!-- base href="https://proproprogs.ru/" -->
	<title>#16. Магические методы __eq__ и __hash__ | Python ООП</title>
	<meta name="yandex-verification" content="dc612d99275111ce">
	<meta name="google-site-verification" content="dBeU07wRdu1RPn01tUx7i7POaYp6QVgQiuCLHWLHudM">
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<link rel="shortcut icon" href="https://proproprogs.ru/images/main.ico" type="image/x-icon">
	<script async="" src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/tag.js"></script><script type="text/javascript" src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/jquery-1.9.0.min.js"></script>
	<link rel="stylesheet" href="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/fonts.css">
	<link type="text/css" href="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/styles.css" rel="stylesheet">
	<link type="text/css" href="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/video.css" rel="stylesheet">
	<meta name="description" content="Что такое хэш объектов классов, как вычисляется и для чего нужен. Переопределение стандартного поведения функции hash() через магические методы __eq__ и __hash__.">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>
<script>
function onShowMobileMenu() {
	let m = $('#topmenu-toggle');
	if( m.is(":visible") ) m.hide();
	else m.show();
}
</script>

<table class="table-page" cellspacing="0" cellpadding="0" border="0">
<tbody><tr><td valign="top">
		<div class="header">
			<ul class="mainmenu-mobile">
			<li class="logo"><a href="https://proproprogs.ru/index.php"><div class="logo"></div></a></li>
			<li class="last"><a href="javascript:onShowMobileMenu()"><div class="mobile-menu-img"></div></a></li>
			</ul>

			<ul id="mainmenu" class="mainmenu">
			<li class="logo"><a href="https://proproprogs.ru/index.php"><div class="logo"></div></a></li>
			<li><a href="https://proproprogs.ru/python">Python</a></li><li><a href="https://proproprogs.ru/js">JavaScript</a></li><li><a href="https://proproprogs.ru/java">Java</a></li><li><a href="https://proproprogs.ru/data">Обработка данных</a></li><li><a href="https://proproprogs.ru/else">Еще</a></li>
			<li class="last"><a href="mailto:sc_lib@list.ru">sc_lib@list.ru</a></li>
			</ul>
			<div class="clear"></div>
		</div>
		<div class="topmenu-toggle" id="topmenu-toggle">
			<ul class="mobile-list"><li><a href="https://proproprogs.ru/python">Python</a></li><ul class="mobile-list-expand"><li><a href="https://proproprogs.ru/python_base">Основы Python</a></li><li><a href="https://proproprogs.ru/python_oop">Python ООП</a></li><li><a href="https://proproprogs.ru/wxpython">wxPython</a></li><li><a href="https://proproprogs.ru/modules">Модули</a></li><li><a href="https://proproprogs.ru/flask">Flask</a></li><li><a href="https://proproprogs.ru/django">Django</a></li></ul><li><a href="https://proproprogs.ru/js">JavaScript</a></li><ul class="mobile-list-expand"><li><a href="https://proproprogs.ru/javascript">Основы JavaScript</a></li><li><a href="https://proproprogs.ru/javascript_dom">JavaScript DOM</a></li><li><a href="https://proproprogs.ru/javascript_oop">JavaScript ООП</a></li></ul><li><a href="https://proproprogs.ru/java">Java</a></li><ul class="mobile-list-expand"><li><a href="https://proproprogs.ru/java_base">Основы Java</a></li><li><a href="https://proproprogs.ru/java_oop">Java ООП</a></li></ul><li><a href="https://proproprogs.ru/data">Обработка данных</a></li><ul class="mobile-list-expand"><li><a href="https://proproprogs.ru/neural_network">Нейронные сети</a></li><li><a href="https://proproprogs.ru/dsp">ЦОС</a></li><li><a href="https://proproprogs.ru/fractals">Фракталы</a></li><li><a href="https://proproprogs.ru/ga">Генетические алгоритмы</a></li><li><a href="https://proproprogs.ru/tensorflow">Tensorflow</a></li><li><a href="https://proproprogs.ru/ml">ML</a></li></ul><li><a href="https://proproprogs.ru/else">Еще</a></li><ul class="mobile-list-expand"><li><a href="https://proproprogs.ru/structure_data">Структуры данных</a></li></ul></ul>
		</div>
<!-- Yandex.Metrika counter -->
<script type="text/javascript">
   (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
   m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)})
   (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

   ym(61572289, "init", {
        clickmap:true,
        trackLinks:true,
        accurateTrackBounce:true,
        webvisor:true
   });
</script>
<noscript><div><img src="https://mc.yandex.ru/watch/61572289" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
<!-- /Yandex.Metrika counter -->
<table class="table-content" cellspacing="0" cellpadding="0" border="0">
<tbody><tr><td class="left-chapters" valign="top">
	<ul id="leftchapters">
	<li>Магические методы классов</li>
	<li><a href="https://proproprogs.ru/python_oop/magicheskiy-metod-call-funktory-i-klassy-dekoratory">Магический метод __call__. Функторы и классы-декораторы</a></li><li><a href="https://proproprogs.ru/python_oop/magicheskie-metody-str-repr-len-abs">Магические методы __str__, __repr__, __len__, __abs__</a></li><li><a href="https://proproprogs.ru/python_oop/magicheskie-metody-add-sub-mul-truediv">Магические методы __add__, __sub__, __mul__, __truediv__</a></li><li><a href="https://proproprogs.ru/python_oop/metody-sravneniy-eq-ne-lt-gt">Методы сравнений __eq__, __ne__, __lt__, __gt__ и другие</a></li><li class="selected">Магические методы __eq__ и __hash__</li><li><a href="https://proproprogs.ru/python_oop/magicheskiy-metod-bool-opredeleniya-pravdivosti-obektov">Магический метод __bool__ определения правдивости объектов</a></li><li><a href="https://proproprogs.ru/python_oop/magicheskie-metody-getitem-setitem-delitem">Магические методы __getitem__, __setitem__ и __delitem__</a></li><li><a href="https://proproprogs.ru/python_oop/magicheskie-metody-iter-next">Магические методы __iter__ и __next__</a></li>
	<li class="share">
	<p>Поделиться</p>
	<a class="share-vk" href="https://vk.com/share.php?url=https://proproprogs.ru/python_oop/magicheskie-metody-eq-hash" target="_blank" rel="nofollow"></a>
	<a class="share-tw" href="https://twitter.com/intent/tweet?url=https://proproprogs.ru/python_oop/magicheskie-metody-eq-hash" target="_blank" rel="nofollow"></a>
	<p>Наш канал</p>
	<a class="share-yt" href="https://www.youtube.com/channel/UClJzWfGWuGJL2t-3dYKcHTA/playlists" target="_blank" rel="nofollow"></a>
	</li>
	</ul>
</td><td class="content" valign="top">
	<ul class="breadcrumbs">
	<li><a href="https://proproprogs.ru/index.php">Главная</a></li>
	<li><a href="https://proproprogs.ru/python_oop">Python ООП</a></li>
	<li class="last">Магические методы классов</li>
	</ul>

	<div class="content-text"><h1>Магические методы __eq__ и __hash__</h1>

  	<div class="container"><div class="video_button">
	<a href="https://www.youtube.com/watch?v=Cfx4VCnWeCE&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank" rel="nofollow">
	<div class="title">Смотреть материал на видео</div>
	</a>
</div>

<p>На этом занятии
мы затронем тему вычисления хеша для объектов классов. Вначале что это такое и
зачем нужно? В Python имеется специальная функция:

</p><div class="highlight"><div class="block"><pre class="python" style="font-family:monospace;"><span style="color: #008000;">hash</span><span style="color: black;">(</span><span style="color: #ff4500;">123</span><span style="color: black;">)</span>
<span style="color: #008000;">hash</span><span style="color: black;">(</span><span style="color: #483d8b;">"Python"</span><span style="color: black;">)</span>
<span style="color: #008000;">hash</span><span style="color: black;">(</span><span style="color: black;">(</span><span style="color: #ff4500;">1</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">2</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">3</span><span style="color: black;">)</span><span style="color: black;">)</span></pre></div></div>

<p>которая
формирует по определенному алгоритму целочисленные значения для неизменяемых
объектов. Причем, для равных объектов на выходе всегда должны получаться равные
хэши:

</p><div class="highlight"><div class="block"><pre class="python" style="font-family:monospace;"><span style="color: #008000;">hash</span><span style="color: black;">(</span><span style="color: #483d8b;">"Python"</span><span style="color: black;">)</span>
<span style="color: #008000;">hash</span><span style="color: black;">(</span><span style="color: black;">(</span><span style="color: #ff4500;">1</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">2</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">3</span><span style="color: black;">)</span><span style="color: black;">)</span></pre></div></div>

<p>А вот обратное
утверждение делать нельзя: равные хэши не гарантируют равенство объектов. Это,
как в известном выражении: селедка – это рыба, но не каждая рыба селедка. С
хэшами все то же самое.

</p><p align="center"><img id="Рисунок 1" src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/image001.png" width="470" height="191">

</p><p>Однако, если
хеши не равны, то и объекты точно не равны. Получаем следующие свойства для
хеша:

</p><ol>
<li>Если объекты a == b (равны), то
равен и их хэш.

</li><li>Если равны хеши:
hash(a) == hash(b), то объекты
могут быть равны, но могут быть и не равны.

</li><li>Если хеши не
равны: hash(a) != hash(b), то объекты
точно не равны.
</li></ol>

<p>Причем, обратите
внимание, хэши можно вычислять только для неизменяемых объектов. Например, для
списков:

</p><div class="highlight"><div class="block"><pre class="python" style="font-family:monospace;"><span style="color: #008000;">hash</span><span style="color: black;">(</span><span style="color: black;">[</span><span style="color: #ff4500;">1</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">2</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">3</span><span style="color: black;">]</span><span style="color: black;">)</span></pre></div></div>

<p>получим ошибку «unhashable
type» - не хэшируемый объект.

</p><p>Итак, мы
увидели, что для любого неизменяемого объекта можно вычислять хэш с помощью
функции hash(), но зачем все
это надо? В действительности некоторые объекты в Python, например,
словари используют хэши в качестве своих ключей. Вспомним, когда мы у словаря
указываем ключ, то он должен относиться к неизменяемому типу данных:

</p><div class="highlight"><div class="block"><pre class="python" style="font-family:monospace;">d <span style="color: #66cc66;">=</span> <span style="color: black;">{</span><span style="color: black;">}</span>
d<span style="color: black;">[</span><span style="color: #ff4500;">5</span><span style="color: black;">]</span> <span style="color: #66cc66;">=</span> <span style="color: #ff4500;">5</span>
d<span style="color: black;">[</span><span style="color: #483d8b;">"python"</span><span style="color: black;">]</span> <span style="color: #66cc66;">=</span> <span style="color: #483d8b;">"python"</span>
d<span style="color: black;">[</span><span style="color: black;">(</span><span style="color: #ff4500;">1</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">2</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">3</span><span style="color: black;">)</span><span style="color: black;">]</span> <span style="color: #66cc66;">=</span> <span style="color: black;">[</span><span style="color: #ff4500;">1</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">2</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">3</span><span style="color: black;">]</span></pre></div></div>

<p>В
действительности, это необходимо, чтобы можно было вычислить хеш объектов и
ключи хранить в виде:

</p><p align="center">(хэш ключа,
ключ)

</p><p>Для чего это
понадобилось? Дело в том, что первоначально нужная запись в словаре ищется по
хэшу, так как существует быстрый алгоритм поиска нужного значения хэша. А,
затем, для равных хешей (если такие были обнаружены), отбирается запись с
указанным в ключе объекте. Такой подход значительно ускоряет поиск значения в
словаре.

</p><p>Думаю, теперь вы
представляете себе, что такое хэш и зачем он нужен. Давайте теперь рассмотрим
простой класс Point для представления
координат на плоскости:

</p><div class="highlight"><div class="block"><pre class="python" style="font-family:monospace;"><span style="color: #ff7700;font-weight:bold;">class</span> Point:
&nbsp;&nbsp;&nbsp; <span style="color: #ff7700;font-weight:bold;">def</span> <span style="color: #0000cd;">__init__</span><span style="color: black;">(</span><span style="color: #008000;">self</span><span style="color: #66cc66;">,</span> x<span style="color: #66cc66;">,</span> y<span style="color: black;">)</span>:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: #008000;">self</span>.<span style="color: black;">x</span> <span style="color: #66cc66;">=</span> x
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: #008000;">self</span>.<span style="color: black;">y</span> <span style="color: #66cc66;">=</span> y</pre></div></div>

<p>Для экземпляров
этого класса:

</p><div class="highlight"><div class="block"><pre class="python" style="font-family:monospace;">p1 <span style="color: #66cc66;">=</span> Point<span style="color: black;">(</span><span style="color: #ff4500;">1</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">2</span><span style="color: black;">)</span>
p2 <span style="color: #66cc66;">=</span> Point<span style="color: black;">(</span><span style="color: #ff4500;">1</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">2</span><span style="color: black;">)</span></pre></div></div>

<p>мы совершенно
спокойно можем вычислять хеш:

</p><div class="highlight"><div class="block"><pre class="python" style="font-family:monospace;"><span style="color: #ff7700;font-weight:bold;">print</span><span style="color: black;">(</span><span style="color: #008000;">hash</span><span style="color: black;">(</span>p1<span style="color: black;">)</span><span style="color: #66cc66;">,</span> <span style="color: #008000;">hash</span><span style="color: black;">(</span>p2<span style="color: black;">)</span><span style="color: #66cc66;">,</span> sep<span style="color: #66cc66;">=</span><span style="color: #483d8b;">'<span style="color: #000099; font-weight: bold;">\n</span>'</span><span style="color: black;">)</span></pre></div></div>

<p>Обратите
внимание, несмотря на то, что координаты точек p1 и p2 равны, их хэши
разные. То есть, с точки зрения функции hash() – это два
разных объекта. Но как она понимает, равные объекты или разные? Все просто.
Если оператор сравнения:

</p><div class="highlight"><div class="block"><pre class="python" style="font-family:monospace;"><span style="color: #ff7700;font-weight:bold;">print</span><span style="color: black;">(</span>p1 <span style="color: #66cc66;">==</span> p2<span style="color: black;">)</span></pre></div></div>

<p>дает True, то объекты
равны, иначе – не равны. Соответственно, для разных объектов будут получаться и
разные хэши. Но раз это так, что будет, если мы переопределим поведение этого
оператора сравнения с помощью магического метода __eq__()? Давайте
попробуем:

</p><div class="highlight"><div class="block"><pre class="python" style="font-family:monospace;">&nbsp;&nbsp;&nbsp; <span style="color: #ff7700;font-weight:bold;">def</span> <span style="color: #0000cd;">__eq__</span><span style="color: black;">(</span><span style="color: #008000;">self</span><span style="color: #66cc66;">,</span> other<span style="color: black;">)</span>:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: #ff7700;font-weight:bold;">return</span> <span style="color: #008000;">self</span>.<span style="color: black;">x</span> <span style="color: #66cc66;">==</span> other.<span style="color: black;">x</span> <span style="color: #ff7700;font-weight:bold;">and</span> <span style="color: #008000;">self</span>.<span style="color: black;">y</span> <span style="color: #66cc66;">==</span> other.<span style="color: black;">y</span></pre></div></div>

<p>Теперь у нас
объекты с одинаковыми координатами будут считаться равными. Но при запуске
программы возникает ошибка «unhashable type», то есть, наши объекты стали не
хэшируемыми. Да, как только происходит переопределение оператора ==, то
начальный алгоритм вычисления хэша для таких объектов перестает работать. Поэтому,
нам здесь нужно прописать свой способ вычисления хэша объектов через магический
метод __hash__(), например, так:

</p><div class="highlight"><div class="block"><pre class="python" style="font-family:monospace;">&nbsp;&nbsp;&nbsp; <span style="color: #ff7700;font-weight:bold;">def</span> <span style="color: #0000cd;">__hash__</span><span style="color: black;">(</span><span style="color: #008000;">self</span><span style="color: black;">)</span>:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color: #ff7700;font-weight:bold;">return</span> <span style="color: #008000;">hash</span><span style="color: black;">(</span><span style="color: black;">(</span><span style="color: #008000;">self</span>.<span style="color: black;">x</span><span style="color: #66cc66;">,</span> <span style="color: #008000;">self</span>.<span style="color: black;">y</span><span style="color: black;">)</span><span style="color: black;">)</span></pre></div></div>

<p>Мы здесь
вызываем функцию hash для кортежа из координат точки. Этот кортеж
относится к неизменяемому типу, поэтому для него можно применить стандартную
функцию hash(). То есть, мы
подменили вычисление хэша объекта класса Point на вычисление
хэша от координат точки. Теперь, после запуска программы видим, что объекты
равны и их хэши также равны.

</p><p>Что это в итоге
означает? Смотрите, если взять пустой словарь:

</p><div class="highlight"><div class="block"><pre class="python" style="font-family:monospace;">d <span style="color: #66cc66;">=</span> <span style="color: black;">{</span><span style="color: black;">}</span></pre></div></div>

<p>А, затем,
сформировать записи через объекты p1 и p2:

</p><div class="highlight"><div class="block"><pre class="python" style="font-family:monospace;">d<span style="color: black;">[</span>p1<span style="color: black;">]</span> <span style="color: #66cc66;">=</span> <span style="color: #ff4500;">1</span>
d<span style="color: black;">[</span>p2<span style="color: black;">]</span> <span style="color: #66cc66;">=</span> <span style="color: #ff4500;">2</span>
<span style="color: #ff7700;font-weight:bold;">print</span><span style="color: black;">(</span>d<span style="color: black;">)</span></pre></div></div>

<p>то они будут
восприниматься как один и тот же ключ, так как объекты равны и их хэши тоже
равны. А вот если магические методы в классе Point поставить в
комментарии и снова запустить программу, то увидим, что это уже разные объекты,
которые формируют разные ключи словаря. Вот для чего может понадобиться тонко
настраивать работу функции hash() для объектов классов. И теперь вы
знаете, как это делается.
</p><div class="video_container">
	<h3 class="video_title">Видео по теме</h3>
	<div class="video_list">
		<div class="video_item">
	<a href="https://www.youtube.com/watch?v=Z7AY41tE-3U&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_031.jpg"></div>
	<p class="video_item_title">Концепция ООП простыми словами</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=P4CNNo8jWj4&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_010.jpg"></div>
	<p class="video_item_title">#1. Классы и объекты. Атрибуты классов и объектов</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=Lw8TeLS4_IA&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_022.jpg"></div>
	<p class="video_item_title">#2. Методы классов. Параметр self</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=-J3Ou8-8vVk&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_029.jpg"></div>
	<p class="video_item_title">#3. Инициализатор __init__ и финализатор __del__</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=-xoT6rntpK0&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_009.jpg"></div>
	<p class="video_item_title">#4. Магический метод __new__. Пример паттерна Singleton</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=78PTvj2wYH8&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_015.jpg"></div>
	<p class="video_item_title">#5. Методы класса (classmethod) и статические методы (staticmethod)</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=RipfqbH0eqY&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_028.jpg"></div>
	<p class="video_item_title">#6. Режимы доступа public, private, protected. Сеттеры и геттеры</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=CAx-NLFc-Z4&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_026.jpg"></div>
	<p class="video_item_title">#7. Магические методы __setattr__, __getattribute__, __getattr__ и __delattr__</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=WNj55JzXnvc&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_038.jpg"></div>
	<p class="video_item_title">#8. Паттерн Моносостояние</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=MxviMwbGl3I&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_036.jpg"></div>
	<p class="video_item_title">#9. Свойства property. Декоратор @property</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=ury9pdPXa6s&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_025.jpg"></div>
	<p class="video_item_title">#10. Пример использования объектов property</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=ACqsYPbgePk&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_039.jpg"></div>
	<p class="video_item_title">#11. Дескрипторы (data descriptor и non-data descriptor)</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=UqX5Qekb9sU&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_032.jpg"></div>
	<p class="video_item_title">#12. Магический метод __call__. Функторы и классы-декораторы</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=Aabdr3yxEhQ&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_030.jpg"></div>
	<p class="video_item_title">#13. Магические методы __str__, __repr__, __len__, __abs__</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=OMMQ1ZNKK6Q&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_034.jpg"></div>
	<p class="video_item_title">#14 Магические методы __add__, __sub__, __mul__, __truediv__</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=l3jMyZKDxXE&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_033.jpg"></div>
	<p class="video_item_title">#15. Методы сравнений __eq__, __ne__, __lt__, __gt__ и другие</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=Cfx4VCnWeCE&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default.jpg"></div>
	<p class="video_item_title">#16. Магические методы __eq__ и __hash__</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=a2L5vyCUvzo&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_012.jpg"></div>
	<p class="video_item_title">#17. Магический метод __bool__ определения правдивости объектов</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=EAoiOwYQSuY&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_005.jpg"></div>
	<p class="video_item_title">#18. Магические методы __getitem__, __setitem__ и __delitem__</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=SDJ-Vmf_pxk&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_018.jpg"></div>
	<p class="video_item_title">#19. Магические методы __iter__ и __next__</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=7WVYqjdMa6U&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_002.jpg"></div>
	<p class="video_item_title">#20. Наследование в объектно-ориентированном программировании</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=JTmb2QHZUGg&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_037.jpg"></div>
	<p class="video_item_title">#21. Функция issubclass(). Наследование от встроенных типов и от object</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=BTV9esoCwEE&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_016.jpg"></div>
	<p class="video_item_title">#22. Наследование. Функция super() и делегирование</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=zHgPAm-imvY&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_007.jpg"></div>
	<p class="video_item_title">#23. Наследование. Атрибуты private и protected</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=fzUI3NyJflw&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_006.jpg"></div>
	<p class="video_item_title">#24. Полиморфизм и абстрактные методы</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=9YPooWY6x9o&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_011.jpg"></div>
	<p class="video_item_title">#25. Множественное наследование</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=Cz-grBsGGkQ&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_004.jpg"></div>
	<p class="video_item_title">#26. Коллекция __slots__</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=7xXPuIdfoUU&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_008.jpg"></div>
	<p class="video_item_title">#27. Как работает __slots__ с property и при наследовании</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=MFIlltaeIgs&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_013.jpg"></div>
	<p class="video_item_title">#28. Введение в обработку исключений. Блоки try / except</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=3DmzotEptvM&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_023.jpg"></div>
	<p class="video_item_title">#29. Обработка исключений. Блоки finally и else</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=jVHvFxmiLmI&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_040.jpg"></div>
	<p class="video_item_title">#30. Распространение исключений (propagation exceptions)</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=XR-16WMXZOY&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_020.jpg"></div>
	<p class="video_item_title">#31. Инструкция raise и пользовательские исключения</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=FkhnVkl0EgM&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_019.jpg"></div>
	<p class="video_item_title">#32. Менеджеры контекстов. Оператор with</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=2T83JhAeC6U&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_021.jpg"></div>
	<p class="video_item_title">#33. Вложенные классы</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=tp_cGBN_SQA&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_014.jpg"></div>
	<p class="video_item_title">#34. Метаклассы. Объект type</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=_A90qAV_P5U&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_017.jpg"></div>
	<p class="video_item_title">#35. Пользовательские метаклассы. Параметр metaclass</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=JlMfyDlV_7A&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_035.jpg"></div>
	<p class="video_item_title">#36. Метаклассы в API ORM Django</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=SR6AI7ovZQE&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_024.jpg"></div>
	<p class="video_item_title">#37. Введение в Python Data Classes (часть 1)</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=0yOWSxRzSlU&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_003.jpg"></div>
	<p class="video_item_title">#38. Введение в Python Data Classes (часть 2)</p>
	</a>
</div>
<div class="video_item">
	<a href="https://www.youtube.com/watch?v=iH9kwFJoK-o&amp;list=PLA0M1Bcd0w8zPwP7t-FgwONhZOHt9rz9E" target="_blank">
	<div class="thumb"><img src="%2316.%20%D0%9C%D0%B0%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B5%20%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D1%8B%20__eq__%20%D0%B8%20__hash__%20Python%20%D0%9E%D0%9E%D0%9F_files/default_027.jpg"></div>
	<p class="video_item_title">#39. Python Data Classes при наследовании</p>
	</a>
</div>

	</div>
</div></div>

	<ul class="control"><li class="first"><a href="https://proproprogs.ru/python_oop/metody-sravneniy-eq-ne-lt-gt">Предыдущая</a></li>

<li class="last"><a href="https://proproprogs.ru/python_oop/magicheskiy-metod-bool-opredeleniya-pravdivosti-obektov">Следующая</a></li></ul><div class="clear"></div>

</div></td></tr></tbody></table>
</td></tr>
<tr><td valign="top">
	<div id="footer">
		<p>© 2023 Частичное или полное копирование информации с данного сайта 
для распространения на других ресурсах, в том числе и бумажных, строго 
запрещено. Все тексты и изображения являются собственностью сайта</p>
		<p><a href="https://proproprogs.ru/confidencial">Политика конфиденциальности</a> | <a href="https://proproprogs.ru/terms">Пользовательское соглашение</a>
	</p></div>
</td></tr></tbody></table>


</body></html>